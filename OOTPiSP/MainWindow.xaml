<Window x:Class="OOTPiSP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OOTPiSP"
        xmlns:hw="http://schemas.hpod9.com/haley/wpf"
        mc:Ignorable="d"
        Title="Paint" Height="450" Width="800" >
        
    <Window.InputBindings>
            <KeyBinding Command="Close" Key="Esc" />
            <KeyBinding Command="local:WindowCommands.RotateLeft" Key="LeftShift" Modifiers="Shift" />
            <KeyBinding Command="local:WindowCommands.RotateRight" Key="RightShift" Modifiers="Shift" />
            <KeyBinding Command="local:WindowCommands.RotateReset" Key="LeftCtrl" Modifiers="Control" />
            <KeyBinding Command="local:WindowCommands.RotateReset" Key="RightCtrl" Modifiers="Control" />
            <KeyBinding Command="local:WindowCommands.MoveDown" Key="Down" />
            <KeyBinding Command="local:WindowCommands.MoveDown" Key="S" />
            <KeyBinding Command="local:WindowCommands.MoveUp" Key="Up" />
            <KeyBinding Command="local:WindowCommands.MoveUp" Key="W" />
            <KeyBinding Command="local:WindowCommands.MoveLeft" Key="Left" />
            <KeyBinding Command="local:WindowCommands.MoveLeft" Key="A" />
            <KeyBinding Command="local:WindowCommands.MoveRight" Key="Right" />
            <KeyBinding Command="local:WindowCommands.MoveRight" Key="D" />
    </Window.InputBindings>
        
    <Window.CommandBindings>
        <CommandBinding Command="local:WindowCommands.RotateLeft" Executed="RotateLeft_OnExecuted" />            
        <CommandBinding Command="local:WindowCommands.RotateRight" Executed="RotateRight_OnExecuted" />            
        <CommandBinding Command="local:WindowCommands.RotateReset" Executed="RotateReset_OnExecuted" />            
        <CommandBinding Command="local:WindowCommands.MoveUp" Executed="MoveUp_OnExecuted" />            
        <CommandBinding Command="local:WindowCommands.MoveDown" Executed="MoveDown_OnExecuted" />            
        <CommandBinding Command="local:WindowCommands.MoveRight" Executed="MoveRight_OnExecuted" />            
        <CommandBinding Command="local:WindowCommands.MoveLeft" Executed="MoveLeft_OnExecuted" />            
    </Window.CommandBindings>
    
    <Window.Resources>
        <!--Стили-->
        <Style x:Key="ButtonStyle">
                <Style.Resources>
                        <LinearGradientBrush x:Key="GradientBrushOnButton" StartPoint="0.5,1" EndPoint="0.5,0">
                                <GradientStop Color="OrangeRed" Offset="0" />
                                <GradientStop Color="BlanchedAlmond" Offset="0.5" />
                                <GradientStop Color="RosyBrown" Offset="1" />
                        </LinearGradientBrush> 
                        
                        <LinearGradientBrush x:Key="GradientBrush" StartPoint="0.5,1" EndPoint="0.5,0">
                                <GradientStop Color="Yellow" Offset="0" />
                                <GradientStop Color="GreenYellow" Offset="0.5" />
                                <GradientStop Color="Aqua" Offset="1" />
                        </LinearGradientBrush> 
                </Style.Resources>
                
                <Style.Setters>
                        <Setter Property="Button.Margin" Value="2" />
                        <Setter Property="Button.Background" Value="{StaticResource GradientBrush}"/>
                        <EventSetter Event="Button.Click" Handler="Button_Click"/>
                        <Setter Property="Button.IsDefault" Value="True" />
                </Style.Setters>
                
                <Style.Triggers>
                       <Trigger Property="Button.IsFocused" Value="True">
                               <Setter Property="Button.BorderBrush" Value="{StaticResource GradientBrushOnButton}" />
                               <Setter Property="Button.BorderThickness" Value="2.5" />
                       </Trigger> 
                </Style.Triggers>
        </Style>
        
        <!--Статические ресурсы-->
        <Image x:Key="Circle" Source="./Assets/circle.png"/>
        <Image x:Key="Ellipse" Source="./Assets/ellipse.png"/>
        <Image x:Key="Square" Source="./Assets/square.png"/>
        <Image x:Key="Rectangle" Source="./Assets/rectangle.png"/>
        <Image x:Key="Line" Source="./Assets/line.png"/>
        <Image x:Key="EquilateralTriangle" Source="./Assets/triangle.png"/>
        <Image x:Key="IsoscelesTriangle" Source="./Assets/isosceles-triangle.png"/>
        <Image x:Key="RightTriangle" Source="./Assets/right-triangle.png"/>
        <Image x:Key="Arc" Source="./Assets/arc.png"/>
        <Image x:Key="Pen" Source="./Assets/Pen.png"/>
        <Image x:Key="Fill" Source="./Assets/Fill.png"/>
    </Window.Resources>
        
        <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.05*" />
                    <RowDefinition Height="11*" />
                </Grid.RowDefinitions>
                
                <!-- Панель инструментов -->
                <Grid Grid.Row="0" ZIndex="1" Background="Aquamarine">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <hw:ColorPickerButton Grid.Column="0" Content="{StaticResource Fill}" Name="FillColorPicker" 
                                          Style="{StaticResource ButtonStyle}" SelectedBrush="Black"/>
                    <hw:ColorPickerButton Grid.Column="1" Content="{StaticResource Pen}" Name="PenColorPicker" 
                                          Style="{StaticResource ButtonStyle}" SelectedBrush="Black" />
                    
                    <Button Grid.Column="2" Name="CircleButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource Circle}"/>
                    <Button Grid.Column="3" Name="EllipseButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource Ellipse}" />
                    <Button Grid.Column="4" Name="SquareButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource Square}" />
                    <Button Grid.Column="5" Name="RectangleButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource Rectangle}"/>
                    <Button Grid.Column="6" Name="LineButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource Line}" />
                    <Button Grid.Column="7" Name="EquilateralTriangleButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource EquilateralTriangle}"/>
                    <Button Grid.Column="8" Name="IsoscelesTriangleButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource IsoscelesTriangle}"/>
                    <Button Grid.Column="9" Name="RightTriangleButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource RightTriangle}"/>
                    <Button Grid.Column="10" Name="ArcButton" Style="{StaticResource ButtonStyle}"
                            Content="{StaticResource Arc}"/>
                    
                </Grid>
                
                <!--<Canvas Grid.Row="1" Name="Canvas"/>
                <Border Grid.Row="1"
                        Background ="Transparent"
                        PreviewMouseWheel="Canvas_OnPreviewMouseWheel" 
                        PreviewMouseRightButtonDown="Canvas_OnPreviewMouseRightButtonDown"
                        PreviewMouseLeftButtonDown="Canvas_OnPreviewMouseLeftButtonDown"
                        PreviewMouseMove="Canvas_OnPreviewMouseMove"
                        MouseUp="Canvas_OnMouseUp">
                </Border>-->
                
                <Canvas Grid.Row="1" Name="Canvas" Background ="Transparent" 
                        PreviewMouseWheel="Canvas_OnPreviewMouseWheel" 
                        PreviewMouseRightButtonDown="Canvas_OnPreviewMouseRightButtonDown"
                        PreviewMouseLeftButtonDown="Canvas_OnPreviewMouseLeftButtonDown"
                        PreviewMouseMove="Canvas_OnPreviewMouseMove"
                        PreviewMouseUp="Canvas_OnPreviewMouseUp" />
        </Grid>
</Window>